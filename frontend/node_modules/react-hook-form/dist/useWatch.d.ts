import { FieldValues, UnpackNestedValue, Control } from './types/form';
import { LiteralToPrimitive, DeepPartial } from './types/utils';
export declare function useWatch<TWatchFieldValues extends FieldValues>(props: {
    defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;
    control?: Control;
}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;
export declare function useWatch<TWatchFieldValue extends any>(props: {
    name: string;
    control?: Control;
}): undefined | UnpackNestedValue<LiteralToPrimitive<TWatchFieldValue>>;
export declare function useWatch<TWatchFieldValue extends any>(props: {
    name: string;
    defaultValue: UnpackNestedValue<LiteralToPrimitive<TWatchFieldValue>>;
    control?: Control;
}): UnpackNestedValue<LiteralToPrimitive<TWatchFieldValue>>;
export declare function useWatch<TWatchFieldValues extends FieldValues>(props: {
    name: string[];
    defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;
    control?: Control;
}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;
