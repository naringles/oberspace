{"version":3,"file":"index.ie11.development.js","sources":["../src/utils/isHTMLElement.ts","../src/constants.ts","../src/logic/attachEventListeners.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isArray.ts","../src/utils/isObject.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/transformToNestObject.ts","../src/utils/isUndefined.ts","../src/utils/unique.ts","../src/utils/get.ts","../src/logic/focusOnErrorField.ts","../src/logic/removeAllEventListeners.ts","../src/logic/getRadioValue.ts","../src/logic/getMultipleSelectValue.ts","../src/utils/isRadioInput.ts","../src/utils/isFileInput.ts","../src/utils/isCheckBoxInput.ts","../src/utils/isMultipleSelect.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValue.ts","../src/utils/isDetached.ts","../src/utils/isEmptyObject.ts","../src/utils/unset.ts","../src/logic/findRemovedFieldAndRemoveListener.ts","../src/utils/isString.ts","../src/logic/getFieldsValues.ts","../src/utils/isSameError.ts","../src/logic/shouldRenderBasedOnError.ts","../src/utils/isRegex.ts","../src/logic/getValueAndMessage.ts","../src/utils/isFunction.ts","../src/utils/isBoolean.ts","../src/utils/isMessage.ts","../src/logic/getValidateError.ts","../src/logic/appendErrors.ts","../src/logic/validateField.ts","../src/utils/isPrimitive.ts","../src/utils/getPath.ts","../src/logic/assignWatchFields.ts","../src/logic/skipValidation.ts","../src/logic/getFieldArrayParentName.ts","../src/logic/getIsFieldsDifferent.ts","../src/logic/isNameInFieldArray.ts","../src/utils/isSelectInput.ts","../src/utils/onDomRemove.ts","../src/utils/validationModeChecker.ts","../src/utils/isRadioOrCheckbox.ts","../src/useForm.ts","../src/useFormContext.tsx","../src/logic/generateId.ts","../src/utils/remove.ts","../src/utils/move.ts","../src/utils/swap.ts","../src/utils/prepend.ts","../src/utils/insert.ts","../src/utils/fillEmptyArray.ts","../src/utils/filterBooleanArray.ts","../src/useFieldArray.ts","../src/useWatch.ts","../src/logic/getInputValue.ts","../src/controller.tsx"],"sourcesContent":["export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter((data) => isObject(data) && !isEmptyObject(data))\n              .length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return {\n    ...transformToNestObject((unmountFieldsStateRef || {}).current || {}),\n    ...transformToNestObject(output),\n  };\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n}: {\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isReValidateOnBlur: boolean;\n  isReValidateOnChange: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted: boolean;\n}) => {\n  if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isUndefined from '../utils/isUndefined';\nimport isArray from '../utils/isArray';\n\nexport default function getIsFieldsDifferent(\n  referenceArray: unknown[],\n  differenceArray: unknown[],\n) {\n  if (\n    !isArray<any>(referenceArray) ||\n    !isArray<any>(differenceArray) ||\n    referenceArray.length !== differenceArray.length\n  ) {\n    return true;\n  }\n\n  for (let i = 0; i < referenceArray.length; i++) {\n    const dataA = referenceArray[i];\n    const dataB = differenceArray[i];\n\n    if (\n      isUndefined(dataB) ||\n      Object.keys(dataA).length !== Object.keys(dataB).length\n    ) {\n      return true;\n    }\n\n    for (const key in dataA) {\n      if (dataA[key] !== dataB[key]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref, MutationWatcher } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: VoidFunction,\n): MutationWatcher {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport getIsFieldsDifferent from './logic/getIsFieldsDifferent';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const {\n    current: { isOnBlur, isOnSubmit, isOnChange, isOnAll },\n  } = React.useRef(modeChecker(mode));\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = (value as string).includes(\n                  checkboxRef.value,\n                )),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          getIsFieldsDifferent(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          setFieldValue(field, get({ [name]: value }, fieldName));\n\n          if (shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      if (!shouldUnregister) {\n        unmountFieldsStateRef.current[name] = value;\n      }\n\n      return true;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          name === '' ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation =\n            !isOnAll &&\n            skipValidation({\n              isOnChange,\n              isOnBlur,\n              isBlurEvent,\n              isReValidateOnChange,\n              isReValidateOnBlur,\n              isSubmitted: isSubmittedRef.current,\n            });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolver) {\n            const { errors } = await resolver(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    (values = {}) => {\n      resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      ).then(({ errors }) => {\n        const previousFormIsValid = isValidRef.current;\n        isValidRef.current = isEmptyObject(errors);\n\n        if (previousFormIsValid !== isValidRef.current) {\n          reRender();\n        }\n      });\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production' && !ref.name) {\n      // eslint-disable-next-line no-console\n      return console.warn('Missing name @', ref);\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && option.ref === ref;\n          })\n        : ref === field.ref)\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      callback: SubmitHandler<TSubmitFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getValues();\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await callback(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    fieldsRef.current = {};\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    if (values) {\n      defaultValuesRef.current = values;\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n      fieldsRef.current &&\n        process.env.NODE_ENV === 'production' &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    ...(resolver ? { validateSchemaIsValid: validateResolver } : {}),\n    mode: {\n      isOnBlur,\n      isOnSubmit,\n      isOnChange,\n    },\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import { UNDEFINED } from '../constants';\n\nexport default () => {\n  const d =\n    typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\nimport unique from './unique';\n\nconst removeAt = <T>(data: T[], index: number): T[] => [\n  ...data.slice(0, index),\n  ...data.slice(index + 1),\n];\n\nfunction removeAtIndexes<T>(data: T[], index: number[]): T[] {\n  let k = -1;\n\n  while (++k < data.length) {\n    if (index.indexOf(k) >= 0) {\n      delete data[k];\n    }\n  }\n\n  return unique(data);\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : isArray(index)\n    ? removeAtIndexes(data, index)\n    : removeAt(data, index);\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\n\nexport default <T>(data: T[], from: number, to: number): (T | undefined)[] => {\n  if (isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined as any;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\n","import isArray from './isArray';\n\nexport default function prepend<T>(data: T[]): (T | undefined)[];\nexport default function prepend<T>(data: T[], value: T | T[]): T[];\nexport default function prepend<T>(\n  data: T[],\n  value?: T | T[],\n): (T | undefined)[] {\n  return [...(isArray(value) ? value : [value || undefined]), ...data];\n}\n","import isArray from './isArray';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...(isArray(value) ? value : [value || undefined]),\n    ...data.slice(index),\n  ];\n}\n","import isArray from './isArray';\n\nexport default <T>(value: T | T[]): undefined[] | undefined =>\n  isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import isArray from './isArray';\nimport isObject from './isObject';\n\nfunction mapValueToBoolean(value: any) {\n  if (isObject(value)) {\n    const object: any = {};\n\n    for (const key in value) {\n      object[key] = true;\n    }\n\n    return [object];\n  }\n\n  return [true];\n}\n\nexport const filterBooleanArray = <T>(value: T): T[] =>\n  isArray(value)\n    ? value.map(mapValueToBoolean).flat()\n    : mapValueToBoolean(value);\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport { isMatchFieldArrayName } from './logic/isNameInFieldArray';\nimport generateId from './logic/generateId';\nimport isObject from './utils/isObject';\nimport getIsFieldsDifferent from './logic/getIsFieldsDifferent';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport get from './utils/get';\nimport set from './utils/set';\nimport isUndefined from './utils/isUndefined';\nimport removeArrayAt from './utils/remove';\nimport unset from './utils/unset';\nimport moveArrayAt from './utils/move';\nimport swapArrayAt from './utils/swap';\nimport prependAt from './utils/prepend';\nimport isArray from './utils/isArray';\nimport insertAt from './utils/insert';\nimport isKey from './utils/isKey';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport { filterBooleanArray } from './utils/filterBooleanArray';\nimport unique from './utils/unique';\nimport {\n  Field,\n  FieldValues,\n  UseFieldArrayOptions,\n  Control,\n  ArrayField,\n} from './types/form';\n\nconst appendId = <TValue extends object, TKeyName extends string>(\n  value: TValue,\n  keyName: TKeyName,\n): Partial<ArrayField<TValue, TKeyName>> => ({\n  [keyName]: generateId(),\n  ...(isObject(value) ? value : { value }),\n});\n\nconst mapIds = <TData extends object, TKeyName extends string>(\n  data: TData | TData[],\n  keyName: TKeyName,\n) => (isArray(data) ? data : []).map((value) => appendId(value, keyName));\n\nexport const useFieldArray = <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id',\n  TControl extends Control = Control\n>({\n  control,\n  name,\n  keyName = 'id' as TKeyName,\n}: UseFieldArrayOptions<TKeyName, TControl>) => {\n  const methods = useFormContext();\n  const focusIndexRef = React.useRef(-1);\n  const {\n    isWatchAllRef,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    reRender,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    errorsRef,\n    dirtyFieldsRef,\n    isDirtyRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    watchFieldsRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValues,\n    validateSchemaIsValid,\n    renderWatchedInputs,\n    getValues,\n  } = control || methods.control;\n  let shouldRender;\n\n  const getDefaultValues = () => [\n    ...get(\n      fieldArrayDefaultValues.current[getFieldArrayParentName(name)]\n        ? fieldArrayDefaultValues.current\n        : defaultValuesRef.current,\n      name,\n      [],\n    ),\n  ];\n  const memoizedDefaultValues = React.useRef<Partial<TFieldArrayValues>[]>(\n    getDefaultValues(),\n  );\n  const [fields, setField] = React.useState<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(mapIds(memoizedDefaultValues.current, keyName));\n  const [isDeleted, setIsDeleted] = React.useState(false);\n  const allFields = React.useRef<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(fields);\n  const isNameKey = isKey(name);\n\n  const getCurrentFieldsValues = () =>\n    watchFieldsRef.current.has(name)\n      ? get(getValues(), name).map(\n          (item: Partial<TFieldArrayValues>, index: number) => ({\n            ...allFields.current[index],\n            ...item,\n          }),\n        )\n      : allFields.current;\n\n  allFields.current = fields;\n\n  if (isNameKey) {\n    fieldArrayDefaultValues.current[name] = memoizedDefaultValues.current;\n  }\n\n  const appendValueWithKey = (values: Partial<TFieldArrayValues>[]) =>\n    values.map((value: Partial<TFieldArrayValues>) => appendId(value, keyName));\n\n  const setFieldAndValidState = (\n    fieldsValues: Partial<ArrayField<TFieldArrayValues, TKeyName>>[],\n  ) => {\n    setField(fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateSchemaIsValid) {\n      validateSchemaIsValid({\n        [name]: fieldsValues,\n      });\n    }\n  };\n\n  const shouldRenderFieldArray = (shouldRender: boolean) => {\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      shouldRender = true;\n    }\n\n    renderWatchedInputs(name);\n\n    shouldRender && !isWatchAllRef.current && reRender();\n  };\n\n  const resetFields = (\n    flagOrFields?: (Partial<TFieldArrayValues> | undefined)[],\n  ) => {\n    if (readFormStateRef.current.isDirty) {\n      isDirtyRef.current =\n        isUndefined(flagOrFields) ||\n        getIsFieldsDifferent(\n          flagOrFields,\n          get(defaultValuesRef.current, name, []),\n        );\n    }\n\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\n        removeFieldEventListener(fieldsRef.current[key] as Field, true);\n      }\n    }\n  };\n\n  const append = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    setFieldAndValidState([\n      ...allFields.current,\n      ...(isArray(value)\n        ? appendValueWithKey(value)\n        : [appendId(value, keyName)]),\n    ]);\n\n    if (readFormStateRef.current.dirtyFields) {\n      dirtyFieldsRef.current[name] = [\n        ...(dirtyFieldsRef.current[name] || fillEmptyArray(fields.slice(0, 1))),\n        ...filterBooleanArray(value),\n      ];\n      isDirtyRef.current = true;\n      shouldRender = true;\n    }\n\n    focusIndexRef.current = shouldFocus ? allFields.current.length : -1;\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const prepend = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n    shouldRender = false;\n\n    setFieldAndValidState(\n      prependAt(\n        getCurrentFieldsValues(),\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields();\n\n    if (isArray(get(errorsRef.current, name))) {\n      errorsRef.current[name] = prependAt(\n        get(errorsRef.current, name),\n        emptyArray,\n      );\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = prependAt(\n        touchedFieldsRef.current[name],\n        emptyArray,\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      dirtyFieldsRef.current[name]\n    ) {\n      dirtyFieldsRef.current[name] = prependAt(\n        dirtyFieldsRef.current[name],\n        filterBooleanArray(value),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n\n  const remove = (index?: number | number[]) => {\n    shouldRender = false;\n\n    setFieldAndValidState(removeArrayAt(getCurrentFieldsValues(), index));\n    resetFields(removeArrayAt(get(getValues(), name), index));\n    setIsDeleted(true);\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        removeArrayAt(get(errorsRef.current, name), index),\n      );\n\n      if (!unique(get(errorsRef.current, name, [])).length) {\n        unset(errorsRef.current, name);\n      }\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = removeArrayAt(\n        touchedFieldsRef.current[name],\n        index,\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      dirtyFieldsRef.current[name]\n    ) {\n      dirtyFieldsRef.current[name] = removeArrayAt(\n        dirtyFieldsRef.current[name],\n        index,\n      );\n\n      if (!dirtyFieldsRef.current[name].length) {\n        delete dirtyFieldsRef.current[name];\n      }\n\n      shouldRender = true;\n    }\n\n    if (readFormStateRef.current.isValid && !validateSchemaIsValid) {\n      let fieldIndex = -1;\n      let isFound = false;\n      const isIndexUndefined = isUndefined(index);\n\n      while (fieldIndex++ < fields.length) {\n        const isLast = fieldIndex === fields.length - 1;\n        const isCurrentIndex =\n          (isArray(index) ? index : [index]).indexOf(fieldIndex) >= 0;\n\n        if (isCurrentIndex || isIndexUndefined) {\n          isFound = true;\n        }\n\n        if (!isFound) {\n          continue;\n        }\n\n        for (const key in fields[fieldIndex]) {\n          const currentFieldName = `${name}[${fieldIndex}].${key}`;\n\n          if (isCurrentIndex || isLast || isIndexUndefined) {\n            validFieldsRef.current.delete(currentFieldName);\n            fieldsWithValidationRef.current.delete(currentFieldName);\n          } else {\n            const previousFieldName = `${name}[${fieldIndex - 1}].${key}`;\n\n            if (validFieldsRef.current.has(currentFieldName)) {\n              validFieldsRef.current.add(previousFieldName);\n            }\n            if (fieldsWithValidationRef.current.has(currentFieldName)) {\n              fieldsWithValidationRef.current.add(previousFieldName);\n            }\n          }\n        }\n      }\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const insert = (\n    index: number,\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    const emptyArray = fillEmptyArray(value);\n\n    setFieldAndValidState(\n      insertAt(\n        getCurrentFieldsValues(),\n        index,\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields(insertAt(get(getValues(), name), index));\n\n    if (isArray(get(errorsRef.current, name))) {\n      errorsRef.current[name] = insertAt(\n        get(errorsRef.current, name),\n        index,\n        emptyArray,\n      );\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      touchedFieldsRef.current[name] = insertAt(\n        touchedFieldsRef.current[name],\n        index,\n        emptyArray,\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      dirtyFieldsRef.current[name]\n    ) {\n      dirtyFieldsRef.current[name] = insertAt(\n        dirtyFieldsRef.current[name],\n        index,\n        filterBooleanArray(value),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    shouldRender = false;\n\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      swapArrayAt(get(errorsRef.current, name), indexA, indexB);\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      swapArrayAt(touchedFieldsRef.current[name], indexA, indexB);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      dirtyFieldsRef.current[name]\n    ) {\n      swapArrayAt(dirtyFieldsRef.current[name], indexA, indexB);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const move = (from: number, to: number) => {\n    shouldRender = false;\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      moveArrayAt(get(errorsRef.current, name), from, to);\n    }\n\n    if (readFormStateRef.current.touched && touchedFieldsRef.current[name]) {\n      moveArrayAt(touchedFieldsRef.current[name], from, to);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      dirtyFieldsRef.current[name]\n    ) {\n      moveArrayAt(dirtyFieldsRef.current[name], from, to);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const reset = () => {\n    resetFields();\n    memoizedDefaultValues.current = getDefaultValues();\n    setField(mapIds(memoizedDefaultValues.current, keyName));\n  };\n\n  React.useEffect(() => {\n    if (\n      isNameKey &&\n      isDeleted &&\n      fieldArrayDefaultValues.current[name] &&\n      fields.length < fieldArrayDefaultValues.current[name].length\n    ) {\n      fieldArrayDefaultValues.current[name].pop();\n    }\n\n    if (isWatchAllRef.current) {\n      reRender();\n    } else if (watchFieldsRef) {\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          reRender();\n          break;\n        }\n      }\n    }\n\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (\n          key.startsWith(`${name}[${focusIndexRef.current}]`) &&\n          field!.ref.focus\n        ) {\n          field!.ref.focus();\n          break;\n        }\n      }\n    }\n\n    focusIndexRef.current = -1;\n  }, [\n    fields,\n    name,\n    fieldArrayDefaultValues,\n    isDeleted,\n    isNameKey,\n    reRender,\n    fieldsRef,\n    watchFieldsRef,\n    isWatchAllRef,\n  ]);\n\n  React.useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    const fieldArrayNames = fieldArrayNamesRef.current;\n    fieldArrayNames.add(name);\n    resetFunctions[name] = reset;\n\n    return () => {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNames.delete(name);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    swap: React.useCallback(swap, [name]),\n    move: React.useCallback(move, [name]),\n    prepend: React.useCallback(prepend, [name]),\n    append: React.useCallback(append, [name]),\n    remove: React.useCallback(remove, [fields, name]),\n    insert: React.useCallback(insert, [name]),\n    fields,\n  };\n};\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport isUndefined from './utils/isUndefined';\nimport isString from './utils/isString';\nimport generateId from './logic/generateId';\nimport get from './utils/get';\nimport isArray from './utils/isArray';\nimport {\n  UseWatchOptions,\n  FieldValues,\n  UnpackNestedValue,\n  Control,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial } from './types/utils';\n\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  control?: Control;\n}): undefined | UnpackNestedValue<LiteralToPrimitive<TWatchFieldValue>>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  defaultValue: UnpackNestedValue<LiteralToPrimitive<TWatchFieldValue>>;\n  control?: Control;\n}): UnpackNestedValue<LiteralToPrimitive<TWatchFieldValue>>;\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  name: string[];\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValues>({\n  control,\n  name,\n  defaultValue,\n}: UseWatchOptions): TWatchFieldValues {\n  const methods = useFormContext();\n  const {\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    watchInternal,\n    defaultValuesRef,\n  } = control || methods.control;\n  const [value, setValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? isString(name)\n        ? get(defaultValuesRef.current, name)\n        : isArray(name)\n        ? name.reduce(\n            (previous, inputName) => ({\n              ...previous,\n              [inputName]: get(defaultValuesRef.current, inputName),\n            }),\n            {},\n          )\n        : defaultValuesRef.current\n      : defaultValue,\n  );\n  const idRef = React.useRef<string>();\n  const defaultValueRef = React.useRef(defaultValue);\n  const nameRef = React.useRef(name);\n\n  const updateWatchValue = React.useCallback(\n    () =>\n      setValue(\n        watchInternal(nameRef.current, defaultValueRef.current, idRef.current),\n      ),\n    [setValue, watchInternal, defaultValueRef, nameRef, idRef],\n  );\n\n  React.useEffect(() => {\n    const id = (idRef.current = generateId());\n    const watchFieldsHookRender = watchFieldsHookRenderRef.current;\n    const watchFieldsHook = watchFieldsHookRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = updateWatchValue;\n    watchInternal(nameRef.current, defaultValueRef.current, id);\n\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [\n    nameRef,\n    updateWatchValue,\n    watchFieldsHookRenderRef,\n    watchFieldsHookRef,\n    watchInternal,\n    defaultValueRef,\n  ]);\n\n  return (isUndefined(value) ? defaultValue : value) as TWatchFieldValues;\n}\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport getInputValue from './logic/getInputValue';\nimport skipValidation from './logic/skipValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { useFormContext } from './useFormContext';\nimport { VALUE } from './constants';\nimport { Control } from './types/form';\nimport { ControllerProps } from './types/props';\n\nconst Controller = <\n  TAs extends\n    | React.ReactElement\n    | React.ComponentType<any>\n    | 'input'\n    | 'select'\n    | 'textarea',\n  TControl extends Control = Control\n>({\n  name,\n  rules,\n  as,\n  render,\n  defaultValue,\n  control,\n  onFocus,\n  ...rest\n}: ControllerProps<TAs, TControl>) => {\n  const methods = useFormContext();\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode: { isOnChange, isOnBlur },\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    isSubmittedRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    reRender,\n    fieldsRef,\n    fieldArrayNamesRef,\n    unmountFieldsStateRef,\n    formState,\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(unmountFieldsStateRef.current, name)) && isNotFieldArray\n      ? unmountFieldsStateRef.current[name]\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const onFocusRef = React.useRef(onFocus);\n  const isSubmitted = isSubmittedRef.current;\n\n  const shouldValidate = () =>\n    !skipValidation({\n      isOnBlur,\n      isOnChange,\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted,\n    });\n\n  const commonTask = ([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const registerField = React.useCallback(() => {\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = {\n        ref: fieldsRef.current[name]!.ref,\n        ...rules,\n      };\n    } else {\n      register(\n        Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          },\n        }),\n        rules,\n      );\n    }\n  }, [fieldsRef, rules, name, onFocusRef, register]);\n\n  React.useEffect(\n    () => () => {\n      !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\n    },\n    [unregister, name, fieldArrayNamesRef],\n  );\n\n  React.useEffect(() => {\n    registerField();\n  }, [registerField]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(() => {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      if (isNotFieldArray) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  });\n\n  const onBlur = () => {\n    if (\n      readFormStateRef.current.touched &&\n      !get(touchedFieldsRef.current, name)\n    ) {\n      set(touchedFieldsRef.current, name, true);\n      reRender();\n    }\n\n    if (isOnBlur || (formState.isSubmitted && isReValidateOnBlur)) {\n      trigger(name);\n    }\n  };\n\n  const onChange = (...event: any[]) =>\n    setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true,\n    });\n\n  const props = {\n    ...rest,\n    onChange,\n    onBlur,\n    name,\n    value,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, props)\n      : React.createElement(as as string, props)\n    : render\n    ? render({\n        onChange,\n        onBlur,\n        value,\n      })\n    : null;\n};\n\nexport { Controller };\n"],"names":["isCheckBox","isValidElement","getFieldsValue","React.useRef","React.useState","React.useCallback","React.useEffect","React.createContext","React.useContext","React.createElement","prepend","prependAt","insert","insertAt","React.isValidElement","React.cloneElement"],"mappings":"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"}