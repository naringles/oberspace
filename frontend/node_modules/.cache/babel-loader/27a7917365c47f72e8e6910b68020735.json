{"ast":null,"code":"import _slicedToArray from\"/Users/naringles/Desktop/OneStorage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createContext}from\"react\";export var LoginContext=createContext();export var LogInProvider=function LogInProvider(props){var localState=JSON.parse(sessionStorage.getItem(\"login\"));var _useState=useState(localState||{username:'',status:false}),_useState2=_slicedToArray(_useState,2),loggedIn=_useState2[0],setLoggedIn=_useState2[1];useEffect(function(){sessionStorage.setItem(\"login\",JSON.stringify(loggedIn));},[loggedIn]);return/*#__PURE__*/React.createElement(LoginContext.Provider,{value:[loggedIn,setLoggedIn]},props.children);};","map":{"version":3,"sources":["/Users/naringles/Desktop/OneStorage/frontend/src/components/LoginContext.jsx"],"names":["React","useState","useEffect","createContext","LoginContext","LogInProvider","props","localState","JSON","parse","sessionStorage","getItem","username","status","loggedIn","setLoggedIn","setItem","stringify","children"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,SAAxB,CAAkCC,aAAlC,KAAsD,OAAtD,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAACD,aAAa,EAAhC,CAEP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAClC,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX,CAAnB,CADkC,cAEFV,QAAQ,CAACM,UAAU,EAAI,CAACK,QAAQ,CAAC,EAAV,CAAaC,MAAM,CAAC,KAApB,CAAf,CAFN,wCAE3BC,QAF2B,eAEjBC,WAFiB,eAIlCb,SAAS,CAAC,UAAM,CACZQ,cAAc,CAACM,OAAf,CAAuB,OAAvB,CAAgCR,IAAI,CAACS,SAAL,CAAeH,QAAf,CAAhC,EACH,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAMA,mBACI,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAG,CAACA,QAAD,CAAWC,WAAX,CAA/B,EACCT,KAAK,CAACY,QADP,CADJ,CAKH,CAfM","sourcesContent":["import React, {useState,useEffect,createContext} from \"react\";\n\nexport const LoginContext=createContext();\n\nexport const LogInProvider = props => {\n    const localState = JSON.parse(sessionStorage.getItem(\"login\"));\n    const [loggedIn, setLoggedIn] = useState(localState || {username:'',status:false});\n \n    useEffect(() => {\n        sessionStorage.setItem(\"login\", JSON.stringify(loggedIn));\n    }, [loggedIn]);\n\n\n\n    return (\n        <LoginContext.Provider value={ [loggedIn, setLoggedIn] }>\n        {props.children}\n        </LoginContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}