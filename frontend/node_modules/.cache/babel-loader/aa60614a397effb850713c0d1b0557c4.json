{"ast":null,"code":"var _jsxFileName = \"/Users/naringles/Desktop/OneStorage/frontend/src/components/SearchContext.jsx\";\nimport React, { useState, useMemo, useEffect, createContext } from \"react\";\nexport const SearchContext = createContext();\nexport const SearchProvider = props => {\n  const [searchVal, setSearchVal] = useState(\"\");\n  const value = useMemo(() => ({\n    searchVal,\n    setSearchVal\n  }));\n  return /*#__PURE__*/React.createElement(SearchContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, props.children);\n};\nexport const FilterContext = createContext();\nexport const FilterProvider = props => {\n  const [filterVal, setFilterVal] = useState(\"\");\n  const value = useMemo(() => ({\n    filterVal,\n    setFilterVal\n  }));\n  return /*#__PURE__*/React.createElement(FilterContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, props.children);\n};\nconst localDarkState = JSON.parse(sessionStorage.getItem(\"dark\"));\nexport const DarkContext = createContext();\nexport const DarkProvider = props => {\n  const localDarkState = JSON.parse(sessionStorage.getItem(\"dark\"));\n  const [darkMode, setDarkMode] = useState(localDarkState || false);\n  useEffect(() => {\n    sessionStorage.setItem(\"dark\", darkMode);\n  }, [darkMode]);\n  const value = useMemo(() => ({\n    darkMode,\n    setDarkMode\n  }));\n  return /*#__PURE__*/React.createElement(DarkContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/naringles/Desktop/OneStorage/frontend/src/components/SearchContext.jsx"],"names":["React","useState","useMemo","useEffect","createContext","SearchContext","SearchProvider","props","searchVal","setSearchVal","value","children","FilterContext","FilterProvider","filterVal","setFilterVal","localDarkState","JSON","parse","sessionStorage","getItem","DarkContext","DarkProvider","darkMode","setDarkMode","setItem"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,OAAxB,EAAgCC,SAAhC,EAA0CC,aAA1C,QAA8D,OAA9D;AAEA,OAAO,MAAMC,aAAa,GAACD,aAAa,EAAjC;AAEP,OAAO,MAAME,cAAc,GAAGC,KAAK,IAAI;AAEnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMS,KAAK,GAACR,OAAO,CAAC,OAAK;AAACM,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAL,CAAD,CAAnB;AAEA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACI,QADP,CADJ;AAKH,CAXM;AAcP,OAAO,MAAMC,aAAa,GAACR,aAAa,EAAjC;AAEP,OAAO,MAAMS,cAAc,GAAGN,KAAK,IAAI;AAEnC,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMS,KAAK,GAACR,OAAO,CAAC,OAAK;AAACY,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAAL,CAAD,CAAnB;AAEA,sBACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEL,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACI,QADP,CADJ;AAKH,CAVM;AAaP,MAAMK,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAvB;AAEA,OAAO,MAAMC,WAAW,GAACjB,aAAa,EAA/B;AAEP,OAAO,MAAMkB,YAAY,GAAGf,KAAK,IAAI;AAErC,QAAMS,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAvB;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAACe,cAAc,IAAE,KAAjB,CAAxC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,cAAc,CAACM,OAAf,CAAuB,MAAvB,EAA+BF,QAA/B;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAII,QAAMb,KAAK,GAACR,OAAO,CAAC,OAAK;AAACqB,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAL,CAAD,CAAnB;AAEA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEd,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,KAAK,CAACI,QADP,CADJ;AAKH,CAhBM","sourcesContent":["import React, {useState,useMemo,useEffect,createContext} from \"react\";\n\nexport const SearchContext=createContext();\n\nexport const SearchProvider = props => {\n    \n    const [searchVal, setSearchVal] = useState(\"\");\n\n    const value=useMemo(()=>({searchVal, setSearchVal}));\n\n    return (\n        <SearchContext.Provider value={value}>\n        {props.children}\n        </SearchContext.Provider>\n    );\n};\n\n\nexport const FilterContext=createContext();\n\nexport const FilterProvider = props => {\n    \n    const [filterVal, setFilterVal] = useState(\"\");\n    const value=useMemo(()=>({filterVal, setFilterVal}));\n\n    return (\n        <FilterContext.Provider value={value}>\n        {props.children}\n        </FilterContext.Provider>\n    );\n};\n\n\nconst localDarkState = JSON.parse(sessionStorage.getItem(\"dark\"));\n\nexport const DarkContext=createContext();\n\nexport const DarkProvider = props => {\n    \nconst localDarkState = JSON.parse(sessionStorage.getItem(\"dark\"));\nconst [darkMode, setDarkMode] = useState(localDarkState||false);\n \nuseEffect(() => {\n    sessionStorage.setItem(\"dark\", darkMode);\n}, [darkMode]);\n\n    const value=useMemo(()=>({darkMode, setDarkMode}));\n\n    return (\n        <DarkContext.Provider value={value}>\n        {props.children}\n        </DarkContext.Provider>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}