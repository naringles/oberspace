{"ast":null,"code":"var _jsxFileName = \"/Users/naringles/Desktop/OneStorage/frontend/src/components/NavComponent.jsx\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\nimport classNames from \"classnames\";\nimport ExitToAppTwoToneIcon from \"@material-ui/icons/ExitToAppTwoTone\";\nimport { LoginContext } from \"./LoginContext\";\nimport { FilesContext } from \"./FilesRepo\";\nimport { SearchContext, DarkContext } from \"./SearchContext\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Container, Navbar, Nav, Form, Button, NavDropdown } from \"react-bootstrap\";\nimport logo from \"../oneStorage.png\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst NavComponent = props => {\n  const [loggedIn, setLoggedIn] = useContext(LoginContext);\n  const {\n    searchVal,\n    setSearchVal\n  } = useContext(SearchContext);\n  const {\n    files,\n    setFiles\n  } = useContext(FilesContext);\n  const navBranImgClass = classNames(\"d-inline-block\", \"align-top\");\n  const customSwitchClass = classNames(\"custom-control\", \"custom-switch\", \"darkMode\");\n  const homeRoute = \"/user/home/\" + loggedIn.username; // const userDetailsRoute=\"/\"+loggedIn.type+\"/userDetails\";\n  // const merchantDetailsRoute=\"/\"+loggedIn.type+\"/merchantDetails\";\n\n  const headerPadding = {\n    paddingLeft: \"10rem\"\n  }; // console.log(\"userDetailsRoute: \",userDetailsRoute);\n\n  const [value, setValue] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const {\n    darkMode,\n    setDarkMode\n  } = useContext(DarkContext);\n\n  const changeMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  useEffect(() => {\n    console.log(\"dark mode: \", darkMode);\n\n    if (darkMode) {\n      var elements = document.querySelectorAll(\"body,.card,.list-group-item,.tooltiptext\");\n      elements.forEach(element => {\n        element.style.backgroundColor = \"#000\";\n        element.style.color = \"#fff\";\n      });\n      document.querySelector(\".footerComp\").style.color = \"#fff\";\n    } else {\n      var elements = document.querySelectorAll(\"body,.card,.list-group-item,.tooltiptext\");\n      elements.forEach(element => {\n        element.style.backgroundColor = \"#fff\";\n        element.style.color = \"#000\";\n        document.querySelector(\".footerComp\").style.color = \"#000\";\n      });\n    }\n  }, [darkMode]); // console.log(\"body color:\", );\n\n  return /*#__PURE__*/React.createElement(Navbar, {\n    variant: \"dark\",\n    expand: \"lg\",\n    sticky: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar.Brand, {\n    href: homeRoute,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      float: \"left\"\n    },\n    src: logo,\n    width: \"80\",\n    height: \"60\",\n    className: navBranImgClass,\n    alt: \"CheckMeIn logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      paddingTop: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Oberspace\")), /*#__PURE__*/React.createElement(Navbar.Toggle, {\n    \"aria-controls\": \"responsive-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Navbar.Collapse, {\n    id: \"basic-navbar-nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: customSwitchClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: changeMode,\n    className: \"custom-control-input\",\n    id: \"customSwitch1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-control-label\",\n    htmlFor: \"customSwitch1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, darkMode ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 27\n    }\n  }, \"\\uB2E4\\uD06C \\uBAA8\\uB4DC\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 48\n    }\n  }, \"\\uB77C\\uC774\\uD2B8 \\uBAA8\\uB4DC\")))), /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    value: value,\n    onChange: (event, newValue) => {\n      setValue(newValue);\n      setSearchVal(newValue);\n    },\n    inputValue: inputValue,\n    onInputChange: (event, newInputValue) => {\n      setInputValue(newInputValue);\n    },\n    id: \"free-solo-demo\",\n    clearOnEscape: true,\n    clearOnBlur: true,\n    freeSolo: true,\n    label: \"Search\",\n    options: files.map(file => file.fileName),\n    style: {\n      width: \"100%\",\n      height: \"10%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      style: {\n        background: \"white\",\n        width: \"40vw\"\n      },\n      variant: \"outlined\",\n      placeholder: \"Search Files\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Nav, {\n    className: \"ml-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    href: \"/user/auth/logout\",\n    onClick: props.clearSession,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Logout \", /*#__PURE__*/React.createElement(ExitToAppTwoToneIcon, {\n    style: {\n      fill: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 20\n    }\n  })))));\n};\n\nexport default NavComponent;","map":{"version":3,"sources":["/Users/naringles/Desktop/OneStorage/frontend/src/components/NavComponent.jsx"],"names":["React","useContext","useState","useEffect","HighlightIcon","classNames","ExitToAppTwoToneIcon","LoginContext","FilesContext","SearchContext","DarkContext","HomeIcon","Container","Navbar","Nav","Form","Button","NavDropdown","logo","TextField","Autocomplete","NavComponent","props","loggedIn","setLoggedIn","searchVal","setSearchVal","files","setFiles","navBranImgClass","customSwitchClass","homeRoute","username","headerPadding","paddingLeft","value","setValue","inputValue","setInputValue","darkMode","setDarkMode","changeMode","console","log","elements","document","querySelectorAll","forEach","element","style","backgroundColor","color","querySelector","float","paddingTop","event","newValue","newInputValue","map","file","fileName","width","height","params","background","clearSession","fill"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\";\nimport classNames from \"classnames\";\nimport ExitToAppTwoToneIcon from \"@material-ui/icons/ExitToAppTwoTone\";\nimport { LoginContext } from \"./LoginContext\";\nimport { FilesContext } from \"./FilesRepo\";\nimport { SearchContext, DarkContext } from \"./SearchContext\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport {\n  Container,\n  Navbar,\n  Nav,\n  Form,\n  Button,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport logo from \"../oneStorage.png\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst NavComponent = (props) => {\n  const [loggedIn, setLoggedIn] = useContext(LoginContext);\n  const { searchVal, setSearchVal } = useContext(SearchContext);\n  const { files, setFiles } = useContext(FilesContext);\n  const navBranImgClass = classNames(\"d-inline-block\", \"align-top\");\n  const customSwitchClass = classNames(\n    \"custom-control\",\n    \"custom-switch\",\n    \"darkMode\"\n  );\n  const homeRoute = \"/user/home/\" + loggedIn.username;\n  // const userDetailsRoute=\"/\"+loggedIn.type+\"/userDetails\";\n  // const merchantDetailsRoute=\"/\"+loggedIn.type+\"/merchantDetails\";\n  const headerPadding = {\n    paddingLeft: \"10rem\",\n  };\n\n  // console.log(\"userDetailsRoute: \",userDetailsRoute);\n\n  const [value, setValue] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const { darkMode, setDarkMode } = useContext(DarkContext);\n  const changeMode = () => {\n    setDarkMode(!darkMode);\n  };\n  useEffect(() => {\n    console.log(\"dark mode: \", darkMode);\n    if (darkMode) {\n      var elements = document.querySelectorAll(\n        \"body,.card,.list-group-item,.tooltiptext\"\n      );\n      elements.forEach((element) => {\n        element.style.backgroundColor = \"#000\";\n        element.style.color = \"#fff\";\n      });\n      document.querySelector(\".footerComp\").style.color = \"#fff\";\n    } else {\n      var elements = document.querySelectorAll(\n        \"body,.card,.list-group-item,.tooltiptext\"\n      );\n      elements.forEach((element) => {\n        element.style.backgroundColor = \"#fff\";\n        element.style.color = \"#000\";\n        document.querySelector(\".footerComp\").style.color = \"#000\";\n      });\n    }\n  }, [darkMode]);\n\n  // console.log(\"body color:\", );\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\" sticky=\"top\">\n      <Navbar.Brand href={homeRoute}>\n        <img\n          style={{ float: \"left\" }}\n          src={logo}\n          width=\"80\"\n          height=\"60\"\n          className={navBranImgClass}\n          alt=\"CheckMeIn logo\"\n        />\n        <h3 style={{ paddingTop: \"10%\" }}>Oberspace</h3>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <div className={customSwitchClass}>\n            <input\n              type=\"checkbox\"\n              onChange={changeMode}\n              className=\"custom-control-input\"\n              id=\"customSwitch1\"\n            />\n            <label className=\"custom-control-label\" htmlFor=\"customSwitch1\">\n              {darkMode ? <span>다크 모드</span> : <span>라이트 모드</span>}\n            </label>\n          </div>\n        </Nav>\n\n        <Nav className=\"ml-auto\">\n          <Autocomplete\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n              setSearchVal(newValue);\n            }}\n            inputValue={inputValue}\n            onInputChange={(event, newInputValue) => {\n              setInputValue(newInputValue);\n            }}\n            id=\"free-solo-demo\"\n            clearOnEscape\n            clearOnBlur\n            freeSolo\n            label=\"Search\"\n            options={files.map((file) => file.fileName)}\n            style={{ width: \"100%\", height: \"10%\" }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                style={{ background: \"white\", width: \"40vw\" }}\n                variant=\"outlined\"\n                placeholder=\"Search Files\"\n              />\n            )}\n          />\n        </Nav>\n\n        <Nav className=\"ml-auto\">\n          <Nav.Link href=\"/user/auth/logout\" onClick={props.clearSession}>\n            Logout <ExitToAppTwoToneIcon style={{ fill: \"white\" }} />\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavComponent;\n"]},"metadata":{},"sourceType":"module"}