{"ast":null,"code":"var _jsxFileName = \"/Users/naringles/Desktop/OneStorage/frontend/src/components/FileUpload.jsx\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { LoginContext } from \"./LoginContext\";\nimport { FilesContext } from \"./FilesRepo\";\nimport Progress from \"./UploadProgressBar\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction FileUpload(props) {\n  console.log(\"props.show is :\", props.show);\n  const [loggedIn, setLoggedIn] = useContext(LoginContext);\n  const {\n    files,\n    setFiles\n  } = useContext(FilesContext);\n  const [upFiles, setUpFiles] = useState([]);\n  const [fileNames, setFileNames] = useState([\"Choose Files(s)\"]);\n  const [uploadPct, setUploadPct] = useState(0);\n  const [show, setShow] = useState(props.show);\n  const [messages, setMessage] = useState([\"Note:\"]);\n\n  const handleClose = () => {\n    setShow(false);\n    props.handleClose();\n    setMessage([\"Note: \"]);\n    setFileNames([\"Choose Files(s)\"]);\n    setUpFiles([]);\n  };\n\n  const handleChange = e => {\n    setMessage([\"Note: \"]);\n    setUpFiles(e.target.files);\n    setFileNames([...e.target.files].map(file => file.name));\n  };\n\n  useEffect(() => {\n    fileNames.map(fname => {\n      files.map(file => {\n        if (file.fileName === fname) {\n          setMessage(prevMsg => [...new Set([...prevMsg, `A file with ${fname} already exists, do you want upload this again?`])]);\n        }\n      });\n    });\n  }, [fileNames]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"files: \", upFiles);\n    console.log(\"file names: \", fileNames);\n    const formData = new FormData();\n\n    for (var i = 0; i < upFiles.length; i++) {\n      let upFile = upFiles.item(i);\n      formData.append(\"file\", upFile);\n    } // formData.append('uploadFiles', files);\n    // });\n\n\n    console.log(\"formData: \", formData);\n\n    try {\n      const res = await axios.post(\"/action/upload/multiple\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        onUploadProgress: progressEvent => {\n          setUploadPct(parseInt(Math.round(progressEvent.loaded * 100 / progressEvent.total)));\n          setTimeout(() => setUploadPct(0), 10000);\n        }\n      }); // const { fileName, filePath } = res.data;\n      // setUploadedFile({ fileName, filePath });\n\n      console.log(\"File Uploaded : \", res.data);\n      setFileNames([\"Choose Files(s)\"]);\n      setUpFiles([]);\n      setMessage([\"Note: \"]);\n    } catch (err) {\n      // if (err.response.status === 500) {\n      console.log(\"There was a problem with the server\"); // } else {\n\n      console.log(err.response.data.msg); // }\n    }\n  };\n\n  useEffect(() => {\n    setShow(props.show);\n  }, [props.show]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: handleClose,\n    backdrop: \"static\",\n    keyboard: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\\uD560 \\uD30C\\uC77C\\uC744 \\uC120\\uD0DD\\uD574 \\uC8FC\\uC138\\uC694.\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: handleChange,\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      overflowY: \"hidden\"\n    },\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, fileNames.map((fName, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, fName, \" \"))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, messages.length > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"#440c05\",\n      color: \"#fff\",\n      padding: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"p\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, msg))) : null, /*#__PURE__*/React.createElement(Progress, {\n    percentage: uploadPct,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/naringles/Desktop/OneStorage/frontend/src/components/FileUpload.jsx"],"names":["React","useState","useEffect","useContext","axios","useHistory","LoginContext","FilesContext","Progress","Modal","FileUpload","props","console","log","show","loggedIn","setLoggedIn","files","setFiles","upFiles","setUpFiles","fileNames","setFileNames","uploadPct","setUploadPct","setShow","messages","setMessage","handleClose","handleChange","e","target","map","file","name","fname","fileName","prevMsg","Set","handleSubmit","preventDefault","formData","FormData","i","length","upFile","item","append","res","post","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","setTimeout","data","err","response","msg","overflowY","fName","index","backgroundColor","color","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { LoginContext } from \"./LoginContext\";\n\nimport { FilesContext } from \"./FilesRepo\";\nimport Progress from \"./UploadProgressBar\";\nimport { Modal } from \"react-bootstrap\";\nfunction FileUpload(props) {\n  console.log(\"props.show is :\", props.show);\n  const [loggedIn, setLoggedIn] = useContext(LoginContext);\n  const { files, setFiles } = useContext(FilesContext);\n  const [upFiles, setUpFiles] = useState([]);\n  const [fileNames, setFileNames] = useState([\"Choose Files(s)\"]);\n  const [uploadPct, setUploadPct] = useState(0);\n  const [show, setShow] = useState(props.show);\n  const [messages, setMessage] = useState([\"Note:\"]);\n  const handleClose = () => {\n    setShow(false);\n    props.handleClose();\n    setMessage([\"Note: \"]);\n    setFileNames([\"Choose Files(s)\"]);\n    setUpFiles([]);\n  };\n  const handleChange = (e) => {\n    setMessage([\"Note: \"]);\n    setUpFiles(e.target.files);\n    setFileNames([...e.target.files].map((file) => file.name));\n  };\n  useEffect(() => {\n    fileNames.map((fname) => {\n      files.map((file) => {\n        if (file.fileName === fname) {\n          setMessage((prevMsg) => [\n            ...new Set([\n              ...prevMsg,\n              `A file with ${fname} already exists, do you want upload this again?`,\n            ]),\n          ]);\n        }\n      });\n    });\n  }, [fileNames]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"files: \", upFiles);\n    console.log(\"file names: \", fileNames);\n\n    const formData = new FormData();\n    for (var i = 0; i < upFiles.length; i++) {\n      let upFile = upFiles.item(i);\n      formData.append(\"file\", upFile);\n    }\n    // formData.append('uploadFiles', files);\n    // });\n    console.log(\"formData: \", formData);\n\n    try {\n      const res = await axios.post(\"/action/upload/multiple\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress: (progressEvent) => {\n          setUploadPct(\n            parseInt(\n              Math.round((progressEvent.loaded * 100) / progressEvent.total)\n            )\n          );\n          setTimeout(() => setUploadPct(0), 10000);\n        },\n      });\n\n      // const { fileName, filePath } = res.data;\n\n      // setUploadedFile({ fileName, filePath });\n\n      console.log(\"File Uploaded : \", res.data);\n      setFileNames([\"Choose Files(s)\"]);\n      setUpFiles([]);\n      setMessage([\"Note: \"]);\n    } catch (err) {\n      // if (err.response.status === 500) {\n      console.log(\"There was a problem with the server\");\n      // } else {\n      console.log(err.response.data.msg);\n      // }\n    }\n  };\n  useEffect(() => {\n    setShow(props.show);\n  }, [props.show]);\n\n  return (\n    <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>업로드할 파일을 선택해 주세요.</Modal.Title>\n      </Modal.Header>\n\n      <form onSubmit={handleSubmit}>\n        <Modal.Body>\n          <div className=\"custom-file mb-4\">\n            <input\n              type=\"file\"\n              className=\"custom-file-input\"\n              id=\"customFile\"\n              onChange={handleChange}\n              multiple\n            />\n            <label\n              style={{ overflowY: \"hidden\" }}\n              className=\"custom-file-label\"\n              htmlFor=\"customFile\"\n            >\n              {fileNames.map((fName, index) => (\n                <span key={index}>{fName} </span>\n              ))}\n            </label>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          {messages.length > 1 ? (\n            <div\n              style={{\n                backgroundColor: \"#440c05\",\n                color: \"#fff\",\n                padding: \"2%\",\n              }}\n            >\n              {messages.map((msg, index) => (\n                <p key={index}>{msg}</p>\n              ))}\n            </div>\n          ) : null}\n          <Progress percentage={uploadPct} />\n          <input\n            type=\"submit\"\n            value=\"Upload\"\n            className=\"btn btn-primary btn-block mt-4\"\n          />\n        </Modal.Footer>\n      </form>\n    </Modal>\n  );\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}