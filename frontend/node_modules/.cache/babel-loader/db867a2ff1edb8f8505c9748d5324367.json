{"ast":null,"code":"var _jsxFileName = \"/Users/naringles/Desktop/OneStorage/frontend/src/components/LoginContext.jsx\";\nimport React, { useState, useEffect, createContext } from \"react\";\nexport const LoginContext = createContext();\nexport const LogInProvider = props => {\n  const localState = JSON.parse(sessionStorage.getItem(\"login\"));\n  const [loggedIn, setLoggedIn] = useState(localState || {\n    username: '',\n    status: false\n  });\n  useEffect(() => {\n    sessionStorage.setItem(\"login\", JSON.stringify(loggedIn));\n  }, [loggedIn]);\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: [loggedIn, setLoggedIn],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/naringles/Desktop/OneStorage/frontend/src/components/LoginContext.jsx"],"names":["React","useState","useEffect","createContext","LoginContext","LogInProvider","props","localState","JSON","parse","sessionStorage","getItem","loggedIn","setLoggedIn","username","status","setItem","stringify","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAkCC,aAAlC,QAAsD,OAAtD;AAEA,OAAO,MAAMC,YAAY,GAACD,aAAa,EAAhC;AAEP,OAAO,MAAME,aAAa,GAAGC,KAAK,IAAI;AAClC,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX,CAAnB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACM,UAAU,IAAI;AAACO,IAAAA,QAAQ,EAAC,EAAV;AAAaC,IAAAA,MAAM,EAAC;AAApB,GAAf,CAAxC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,cAAc,CAACM,OAAf,CAAuB,OAAvB,EAAgCR,IAAI,CAACS,SAAL,CAAeL,QAAf,CAAhC;AACH,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAMA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAG,CAACA,QAAD,EAAWC,WAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,KAAK,CAACY,QADP,CADJ;AAKH,CAfM","sourcesContent":["import React, {useState,useEffect,createContext} from \"react\";\n\nexport const LoginContext=createContext();\n\nexport const LogInProvider = props => {\n    const localState = JSON.parse(sessionStorage.getItem(\"login\"));\n    const [loggedIn, setLoggedIn] = useState(localState || {username:'',status:false});\n \n    useEffect(() => {\n        sessionStorage.setItem(\"login\", JSON.stringify(loggedIn));\n    }, [loggedIn]);\n\n\n\n    return (\n        <LoginContext.Provider value={ [loggedIn, setLoggedIn] }>\n        {props.children}\n        </LoginContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}