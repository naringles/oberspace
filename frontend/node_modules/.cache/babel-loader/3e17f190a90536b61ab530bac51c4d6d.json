{"ast":null,"code":"var _jsxFileName = \"/Users/naringles/Desktop/OneStorage/frontend/src/components/FilesRepo.jsx\";\nimport React, { useState, createContext, useMemo, useEffect } from \"react\";\nexport const FilesContext = createContext();\nexport const FilesProvider = props => {\n  const localState = JSON.parse(localStorage.getItem(\"files\"));\n  const [files, setFiles] = useState(localState || []);\n  useEffect(() => {\n    localStorage.setItem(\"files\", JSON.stringify(files));\n  }, [files]);\n  const value = useMemo(() => ({\n    files,\n    setFiles\n  }));\n  return /*#__PURE__*/React.createElement(FilesContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/Users/naringles/Desktop/OneStorage/frontend/src/components/FilesRepo.jsx"],"names":["React","useState","createContext","useMemo","useEffect","FilesContext","FilesProvider","props","localState","JSON","parse","localStorage","getItem","files","setFiles","setItem","stringify","value","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,aAAxB,EAAsCC,OAAtC,EAA8CC,SAA9C,QAA8D,OAA9D;AAEA,OAAO,MAAMC,YAAY,GAACH,aAAa,EAAhC;AAEP,OAAO,MAAMI,aAAa,GAAGC,KAAK,IAAI;AAClC,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAnB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACO,UAAU,IAAI,EAAf,CAAlC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,CAACI,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA9B;AAEH,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAKA,QAAMI,KAAK,GAACd,OAAO,CAAC,OAAK;AAACU,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAL,CAAD,CAAnB;AAEA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEG,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCV,KAAK,CAACW,QADP,CADJ;AAKH,CAjBM","sourcesContent":["import React, {useState,createContext,useMemo,useEffect} from \"react\";\n\nexport const FilesContext=createContext();\n\nexport const FilesProvider = props => {\n    const localState = JSON.parse(localStorage.getItem(\"files\"));\n    \n    const [files, setFiles] = useState(localState || []);\n    \n    useEffect(() => {\n        localStorage.setItem(\"files\", JSON.stringify(files));\n\n    }, [files]);\n\n    const value=useMemo(()=>({files, setFiles}));\n\n    return (\n        <FilesContext.Provider value={value}>\n        {props.children}\n        </FilesContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}