{"ast":null,"code":"import _slicedToArray from\"/Users/naringles/Desktop/OneStorage/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,createContext,useMemo,useEffect}from\"react\";export var FilesContext=createContext();export var FilesProvider=function FilesProvider(props){var localState=JSON.parse(localStorage.getItem(\"files\"));var _useState=useState(localState||[]),_useState2=_slicedToArray(_useState,2),files=_useState2[0],setFiles=_useState2[1];useEffect(function(){localStorage.setItem(\"files\",JSON.stringify(files));},[files]);var value=useMemo(function(){return{files:files,setFiles:setFiles};});return/*#__PURE__*/React.createElement(FilesContext.Provider,{value:value},props.children);};","map":{"version":3,"sources":["/Users/naringles/Desktop/OneStorage/frontend/src/components/FilesRepo.jsx"],"names":["React","useState","createContext","useMemo","useEffect","FilesContext","FilesProvider","props","localState","JSON","parse","localStorage","getItem","files","setFiles","setItem","stringify","value","children"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,aAAxB,CAAsCC,OAAtC,CAA8CC,SAA9C,KAA8D,OAA9D,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAACH,aAAa,EAAhC,CAEP,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CAClC,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAnB,CADkC,cAGRX,QAAQ,CAACO,UAAU,EAAI,EAAf,CAHA,wCAG3BK,KAH2B,eAGpBC,QAHoB,eAKlCV,SAAS,CAAC,UAAM,CACZO,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA9B,EAEH,CAHQ,CAGN,CAACA,KAAD,CAHM,CAAT,CAKA,GAAMI,CAAAA,KAAK,CAACd,OAAO,CAAC,iBAAK,CAACU,KAAK,CAALA,KAAD,CAAQC,QAAQ,CAARA,QAAR,CAAL,EAAD,CAAnB,CAEA,mBACI,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEG,KAA9B,EACCV,KAAK,CAACW,QADP,CADJ,CAKH,CAjBM","sourcesContent":["import React, {useState,createContext,useMemo,useEffect} from \"react\";\n\nexport const FilesContext=createContext();\n\nexport const FilesProvider = props => {\n    const localState = JSON.parse(localStorage.getItem(\"files\"));\n    \n    const [files, setFiles] = useState(localState || []);\n    \n    useEffect(() => {\n        localStorage.setItem(\"files\", JSON.stringify(files));\n\n    }, [files]);\n\n    const value=useMemo(()=>({files, setFiles}));\n\n    return (\n        <FilesContext.Provider value={value}>\n        {props.children}\n        </FilesContext.Provider>\n    );\n};"]},"metadata":{},"sourceType":"module"}